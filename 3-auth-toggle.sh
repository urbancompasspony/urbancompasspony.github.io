#!/bin/bash

# auth-toggle.sh - Script para ativar/desativar autentica√ß√£o do Samba Admin

set -e

# Verificar se √© root
if [[ $EUID -ne 0 ]]; then
   echo "Este script deve ser executado como root"
   exit 1
fi

# Fun√ß√£o para mostrar status atual
show_status() {
    if grep -q "AuthType Basic" /etc/apache2/sites-available/samba-admin.conf 2>/dev/null; then
        echo "üîê AUTENTICA√á√ÉO: ATIVADA"
        if [ -f "/etc/apache2/auth/.htpasswd" ]; then
            user_count=$(wc -l < /etc/apache2/auth/.htpasswd)
            echo "üë• Usu√°rios cadastrados: $user_count"
            echo "üìã Lista de usu√°rios:"
            cut -d: -f1 /etc/apache2/auth/.htpasswd | sed 's/^/   - /'
        fi
    else
        echo "üîì AUTENTICA√á√ÉO: DESATIVADA (Acesso livre)"
    fi
}

# Fun√ß√£o para ativar autentica√ß√£o
enable_auth() {
    if grep -q "AuthType Basic" /etc/apache2/sites-available/samba-admin.conf; then
        echo "‚úì Autentica√ß√£o j√° est√° ativada!"
        return
    fi

    echo "Ativando autentica√ß√£o..."

    # Fazer backup
    cp /etc/apache2/sites-available/samba-admin.conf /etc/apache2/sites-available/samba-admin.conf.backup.$(date +%Y%m%d_%H%M%S)

    # Aplicar configura√ß√£o com autentica√ß√£o
    cat > /etc/apache2/sites-available/samba-admin.conf << 'EOF'
<VirtualHost *:80>
    ServerName localhost
    DocumentRoot /var/www/samba-admin
    
    ScriptAlias /cgi-bin/ "/var/www/samba-admin/cgi-bin/"
    
    <Directory "/var/www/samba-admin/cgi-bin/">
        AuthType Basic
        AuthName "Samba Administration - Login Required"
        AuthUserFile /etc/apache2/auth/.htpasswd
        Require valid-user
        
        Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
        AddHandler cgi-script .cgi .sh .pl .py
        AllowOverride None
    </Directory>
    
    <Directory "/var/www/samba-admin">
        AuthType Basic
        AuthName "Samba Administration - Login Required"
        AuthUserFile /etc/apache2/auth/.htpasswd
        Require valid-user
        
        Options -Indexes +FollowSymLinks
        AllowOverride None
        DirectoryIndex index.html
    </Directory>
    
    ErrorLog ${APACHE_LOG_DIR}/samba-admin_error.log
    CustomLog ${APACHE_LOG_DIR}/samba-admin_access.log combined
    
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options DENY
    Header always set X-XSS-Protection "1; mode=block"
</VirtualHost>
EOF

    systemctl reload apache2
    echo "‚úì Autentica√ß√£o ATIVADA!"
}

# Fun√ß√£o para desativar autentica√ß√£o
disable_auth() {
    if ! grep -q "AuthType Basic" /etc/apache2/sites-available/samba-admin.conf; then
        echo "‚úì Autentica√ß√£o j√° est√° desativada!"
        return
    fi

    echo "Desativando autentica√ß√£o..."

    # Fazer backup
    cp /etc/apache2/sites-available/samba-admin.conf /etc/apache2/sites-available/samba-admin.conf.backup.$(date +%Y%m%d_%H%M%S)

    # Aplicar configura√ß√£o SEM autentica√ß√£o (configura√ß√£o original do autoconfig.sh)
    cat > /etc/apache2/sites-available/samba-admin.conf << 'EOF'
<VirtualHost *:80>
    ServerName localhost
    DocumentRoot /var/www/samba-admin
    
    ScriptAlias /cgi-bin/ "/var/www/samba-admin/cgi-bin/"
    
    <Directory "/var/www/samba-admin/cgi-bin/">
        Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
        AddHandler cgi-script .cgi .sh .pl .py
        Require all granted
        AllowOverride None
    </Directory>
    
    <Directory "/var/www/samba-admin">
        Options -Indexes +FollowSymLinks
        AllowOverride None
        Require all granted
        DirectoryIndex index.html
    </Directory>
    
    ErrorLog ${APACHE_LOG_DIR}/samba-admin_error.log
    CustomLog ${APACHE_LOG_DIR}/samba-admin_access.log combined
    
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options DENY
    Header always set X-XSS-Protection "1; mode=block"
</VirtualHost>
EOF

    systemctl reload apache2
    echo "‚úì Autentica√ß√£o DESATIVADA! (Acesso livre)"
}

# Fun√ß√£o para gerenciar usu√°rios
manage_users() {
    if [ ! -f "/etc/apache2/auth/.htpasswd" ]; then
        echo "Arquivo de senhas n√£o existe. Criando..."
        mkdir -p /etc/apache2/auth
        touch /etc/apache2/auth/.htpasswd
        chown www-data:www-data /etc/apache2/auth/.htpasswd
        chmod 640 /etc/apache2/auth/.htpasswd
    fi

    while true; do
        echo ""
        echo "=== GERENCIAMENTO DE USU√ÅRIOS ==="
        echo "1) Listar usu√°rios"
        echo "2) Adicionar usu√°rio"
        echo "3) Remover usu√°rio"
        echo "4) Alterar senha de usu√°rio"
        echo "5) Voltar"
        echo -n "Escolha uma op√ß√£o: "
        read choice

        case $choice in
            1)
                echo ""
                if [ -s "/etc/apache2/auth/.htpasswd" ]; then
                    echo "üë• Usu√°rios cadastrados:"
                    cut -d: -f1 /etc/apache2/auth/.htpasswd | sed 's/^/   - /'
                else
                    echo "Nenhum usu√°rio cadastrado"
                fi
                ;;
            2)
                echo -n "Nome do novo usu√°rio: "
                read username
                if [ -n "$username" ]; then
                    if grep -q "^$username:" /etc/apache2/auth/.htpasswd 2>/dev/null; then
                        echo "Usu√°rio '$username' j√° existe!"
                    else
                        htpasswd /etc/apache2/auth/.htpasswd "$username"
                        echo "‚úì Usu√°rio '$username' adicionado!"
                    fi
                fi
                ;;
            3)
                echo -n "Nome do usu√°rio para remover: "
                read username
                if [ -n "$username" ]; then
                    if htpasswd -D /etc/apache2/auth/.htpasswd "$username" 2>/dev/null; then
                        echo "‚úì Usu√°rio '$username' removido!"
                    else
                        echo "Usu√°rio '$username' n√£o encontrado!"
                    fi
                fi
                ;;
            4)
                echo -n "Nome do usu√°rio para alterar senha: "
                read username
                if [ -n "$username" ]; then
                    if grep -q "^$username:" /etc/apache2/auth/.htpasswd 2>/dev/null; then
                        htpasswd /etc/apache2/auth/.htpasswd "$username"
                        echo "‚úì Senha de '$username' alterada!"
                    else
                        echo "Usu√°rio '$username' n√£o encontrado!"
                    fi
                fi
                ;;
            5)
                break
                ;;
            *)
                echo "Op√ß√£o inv√°lida!"
                ;;
        esac
    done
}

# Menu principal
while true; do
    clear
    echo "========================================"
    echo "  SAMBA ADMIN - GERENCIADOR DE AUTH"
    echo "========================================"
    echo ""
    show_status
    echo ""
    echo "1) Ativar autentica√ß√£o"
    echo "2) Desativar autentica√ß√£o"
    echo "3) Gerenciar usu√°rios"
    echo "4) Ver logs de acesso"
    echo "5) Testar configura√ß√£o Apache"
    echo "6) Sair"
    echo ""
    echo -n "Escolha uma op√ß√£o: "
    read choice

    case $choice in
        1)
            enable_auth
            read -p "Pressione Enter para continuar..."
            ;;
        2)
            echo -n "Tem certeza que deseja desativar a autentica√ß√£o? (s/N): "
            read confirm
            if [[ $confirm =~ ^[Ss]$ ]]; then
                disable_auth
            else
                echo "Opera√ß√£o cancelada."
            fi
            read -p "Pressione Enter para continuar..."
            ;;
        3)
            manage_users
            ;;
        4)
            echo ""
            echo "=== LOGS DE ACESSO (√∫ltimas 20 linhas) ==="
            tail -20 /var/log/apache2/samba-admin_access.log 2>/dev/null || echo "Nenhum log encontrado"
            echo ""
            read -p "Pressione Enter para continuar..."
            ;;
        5)
            echo ""
            echo "=== TESTE DE CONFIGURA√á√ÉO ==="
            if apache2ctl configtest; then
                echo "‚úì Configura√ß√£o Apache OK!"
            else
                echo "‚úó Erro na configura√ß√£o Apache!"
            fi
            echo ""
            read -p "Pressione Enter para continuar..."
            ;;
        6)
            echo "Saindo..."
            exit 0
            ;;
        *)
            echo "Op√ß√£o inv√°lida!"
            read -p "Pressione Enter para continuar..."
            ;;
    esac
done
