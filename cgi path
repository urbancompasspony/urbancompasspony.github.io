cat > /var/www/samba-admin/cgi-bin/test-path.cgi << 'EOF'
#!/bin/bash
echo "Content-Type: application/json"
echo ""
echo "{"
echo "  \"path\": \"$PATH\","
echo "  \"which_samba\": \"$(which samba-tool 2>&1)\","
echo "  \"sudo_path\": \"$(sudo -n which samba-tool 2>&1)\","
echo "  \"full_path\": \"$(ls -la /usr/bin/samba-tool 2>&1)\""
echo "}"
EOF

chmod 755 /var/www/samba-admin/cgi-bin/test-path.cgi
curl http://172.20.0.40/cgi-bin/test-path.cgi

cat > /var/www/samba-admin/cgi-bin/samba-admin.cgi << 'CGIEOF'
#!/bin/bash

echo "Content-Type: application/json; charset=UTF-8"
echo ""

# Definir PATH completo
export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

# Função para log de debug
debug_log() {
    echo "$(date): $1" >> /var/log/samba-cgi/debug.log 2>/dev/null || true
}

# Função para processar parâmetros CGI
parse_cgi_params() {
    if [ "$REQUEST_METHOD" = "POST" ]; then
        read -r QUERY_STRING
    fi
    
    IFS='&'
    for param in $QUERY_STRING; do
        key=$(echo "$param" | cut -d'=' -f1)
        value=$(echo "$param" | cut -d'=' -f2- | sed 's/+/ /g' | sed 's/%20/ /g')
        
        case "$key" in
            "action") ACTION="$value" ;;
            "username") USERNAME="$value" ;;
            "display-name") FIRSTNAME="$value" ;;
            "password") PASSWORD="$value" ;;
        esac
    done
}

# Função para executar comandos
execute_command() {
    local cmd="$@"
    local result
    local exit_code
    
    debug_log "Executando: $cmd"
    debug_log "PATH: $PATH"
    
    # Executar comando com PATH explícito
    result=$(sudo -n env PATH="$PATH" $cmd 2>&1)
    exit_code=$?
    
    debug_log "Exit code: $exit_code"
    debug_log "Result: ${result:0:200}..."
    
    # Escapar para JSON
    escaped_result=$(echo "$result" | sed 's/"/\\"/g' | tr '\n' '\\n')
    
    if [ $exit_code -eq 0 ]; then
        echo "{\"status\":\"success\",\"message\":\"Comando executado com sucesso\",\"output\":\"$escaped_result\"}"
    else
        echo "{\"status\":\"error\",\"message\":\"Erro ao executar comando (código: $exit_code)\",\"output\":\"$escaped_result\"}"
    fi
}

# Parse parâmetros
parse_cgi_params

# Executar ação
case "$ACTION" in
    "list-users")
        execute_command /usr/bin/samba-tool user list
        ;;
    "test")
        execute_command /usr/bin/samba-tool domain info 127.0.0.1
        ;;
    "create-user")
        if [ -n "$USERNAME" ] && [ -n "$FIRSTNAME" ] && [ -n "$PASSWORD" ]; then
            USERNAME=$(echo "$USERNAME" | sed 's/[^a-zA-Z0-9._-]//g')
            FIRSTNAME=$(echo "$FIRSTNAME" | sed 's/[^a-zA-Z0-9 ._-]//g')
            execute_command /usr/bin/samba-tool user create "$USERNAME" "$PASSWORD" --surname="$FIRSTNAME"
        else
            echo '{"status":"error","message":"Campos obrigatórios: username, display-name, password"}'
        fi
        ;;
    "debug")
        echo '{"status":"success","path":"'$PATH'","which_samba":"'$(which samba-tool 2>&1)'","full_path":"'$(ls -la /usr/bin/samba-tool 2>&1)'"}'
        ;;
    *)
        echo '{"status":"success","message":"CGI funcionando","actions":"list-users, test, create-user, debug","user":"'$(whoami)'"}'
        ;;
esac
CGIEOF

chmod 755 /var/www/samba-admin/cgi-bin/samba-admin.cgi
chown www-data:www-data /var/www/samba-admin/cgi-bin/samba-admin.cgi

  # Modificar sudoers para preservar PATH
cat > /etc/sudoers.d/90-samba-cgi << 'EOF'
# Samba CGI Configuration
Defaults:www-data !requiretty
Defaults:www-data !env_reset
Defaults:www-data env_keep += "PATH HOME USER"
Defaults:www-data secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
www-data ALL=(ALL) NOPASSWD: ALL
EOF

chmod 440 /etc/sudoers.d/90-samba-cgi

  
